---
title: "did"
format: html
editor_options: 
  chunk_output_type: inline
---

# Setup

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(arrow)
library(did)
library(broom)
#library(did2s)
#library(HonestDiD)
#source("honest_did_helper.R")
```

# Import

```{r}
dates_pseudo_halbjahr <- read_parquet("../Daten/dates_pseudo_halbjahr.parquet")

data_miete_complete <- read_parquet("../Daten/RWI_GEO_REX/Daten_Miete/data_miete_complete.parquet")
data_kauf_complete <- read_parquet("../Daten/RWI_GEO_REX/Daten_Kauf/data_kauf_complete.parquet")
```

# Miete

## Bevorzugte Spezifikation

- Keine `fill`ed in Zellen
- Clustering auf Ebene der PLZ
- Controlgroup not-yet-treated
- Erklärende Variable `mode_baujahr`
- ...

```{r}
mod_miete <- data_miete_complete %>%
  filter(n_cell_date > 0) %>%
  #filter(n_cell > 10) %>%
  #filter(!gemeindetyp_name %in% c("Großstadt")) %>%
  att_gt(
    data = .,
    yname = "mean_mietekalt_m2",
    tname = "date_pseudo_halbjahr",
    idname = "xy_mp",
    gname = "got_fiber_date_pseudo_halbjahr",
    xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + gemeindetyp_name + durchschnittsalter + anzahl_haushalte + einkommen + einkommen_delta,
    weightsname = "anzahl_haushalte",
    anticipation = 0,
    alp = 0.05,
    control_group = "notyettreated",
    est_method = "dr",
    base_period = "varying",
    clustervars = c("xy_mp", "plz"),
    biter = 1000,
    pl = TRUE,
    cores = 6,
    allow_unbalanced_panel = TRUE,
    print_details = FALSE
  )
mod_miete

#ggdid(mod_miete)

tidy(mod_miete) %>%
  left_join(dates_pseudo_halbjahr %>% filter(date %% 100 %in% c(6, 12)),
            by = join_by(group == date_pseudo_halbjahr)) %>%
  mutate(is_treated = time >= group) %>%
  ggplot(aes(x = time, y = estimate, ymin = conf.low, ymax = conf.high, color = is_treated))+
  geom_linerange()+
  geom_point()+
  geom_hline(aes(yintercept = 0), linetype = "dashed")+
  facet_wrap(~date, nrow = 2)+
  #scale_x_continuous(breaks = 1:20)+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr",
       y = "ATT: Miete (€/m²)",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_miete.pdf", width = 5, height = 4, device = cairo_pdf)

mod_miete_agg_dyn <- did::aggte(mod_miete, type = "dynamic")
ggdid(mod_miete_agg_dyn)+
  coord_cartesian(xlim = c(-6, 10))+
  scale_x_continuous(breaks = -6:10)+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr: Relativ zum ersten Treatment",
       y = "ATT: Miete (€/m²)",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_miete_agg_dyn.pdf", width = 5, height = 4, device = cairo_pdf)
  
mod_miete_agg_group <- did::aggte(mod_miete, type = "group")
ggdid(mod_miete_agg_group)+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "ATT: Miete (€/m²)",
       y = "Halbjahr: Erstes Treatments",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_miete_agg_group.pdf", width = 5, height = 4, device = cairo_pdf)

mod_miete_agg_calendar <- did::aggte(mod_miete, type = "calendar")
ggdid(mod_miete_agg_calendar)+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr",
       y = "ATT: Miete (€/m²)",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_miete_agg_calendar.pdf", width = 5, height = 4, device = cairo_pdf)
```

## ohne PLZ Cluster

```{r}
mod_miete_2 <- data_miete_complete %>%
  filter(n_cell_date > 0) %>%
  #filter(n_cell > 10) %>%
  #filter(!gemeindetyp_name %in% c("Großstadt")) %>%
  att_gt(
    data = .,
    yname = "mean_mietekalt_m2",
    tname = "date_pseudo_halbjahr",
    idname = "xy_mp",
    gname = "got_fiber_date_pseudo_halbjahr",
    xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + gemeindetyp_name + durchschnittsalter + anzahl_haushalte + einkommen + einkommen_delta,
    weightsname = "anzahl_haushalte",
    anticipation = 0,
    alp = 0.05,
    control_group = "notyettreated",
    est_method = "dr",
    base_period = "varying",
    clustervars = c("xy_mp"),
    biter = 1000,
    pl = TRUE,
    cores = 6,
    allow_unbalanced_panel = TRUE,
    print_details = FALSE
  )
mod_miete_2

mod_miete_2_agg_dyn <- did::aggte(mod_miete_2, type = "dynamic")
ggdid(mod_miete_2_agg_dyn)
```

Vergleich

```{r}
bind_rows(
  tidy(mod_miete_agg_dyn),
  tidy(mod_miete_2_agg_dyn),
  .id = "id"
) %>%
  select(id, event.time, estimate, conf.low, conf.high) %>%
  #filter(event.time == 2) %>%
  pivot_wider(names_from = id, values_from = c(conf.low, conf.high)) %>%
  mutate(is_treated = event.time >= 0) %>%
  ggplot(aes(x = event.time, color = is_treated))+
  geom_linerange(aes(ymin = conf.low_1, ymax = conf.high_1), alpha = .5, linetype = "dashed")+
  geom_linerange(aes(ymin = conf.low_2, ymax = conf.high_2))+
  geom_point(aes(y = estimate))+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr: Relativ zum ersten Treatment",
       y = "ATT: Miete (€/m²)",
       title = element_blank())

ggsave("../Output/plots/did/plot_did_miete_agg_dyn_cluster_comparison.pdf", width = 5, height = 4, device = cairo_pdf)
  

ggdid(mod_miete_agg_dyn)+
  coord_cartesian(ylim = c(-2.5, 2.5))
ggdid(mod_miete_2_agg_dyn)+
  coord_cartesian(ylim = c(-2.5, 2.5))
```

## Never-Treated Vergleichsgruppe

```{r}
mod_miete_never <- data_miete_complete %>%
  filter(n_cell_date > 0) %>%
  #filter(n_cell > 10) %>%
  #filter(!gemeindetyp_name %in% c("Großstadt")) %>%
  att_gt(
    data = .,
    yname = "mean_mietekalt_m2",
    tname = "date_pseudo_halbjahr",
    idname = "xy_mp",
    gname = "got_fiber_date_pseudo_halbjahr",
    xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + gemeindetyp_name + durchschnittsalter + anzahl_haushalte + einkommen + einkommen_delta,
    weightsname = "anzahl_haushalte",
    anticipation = 0,
    alp = 0.05,
    control_group = "nevertreated",
    est_method = "dr",
    base_period = "varying",
    clustervars = c("xy_mp", "plz"),
    biter = 1000,
    pl = TRUE,
    cores = 6,
    allow_unbalanced_panel = TRUE,
    print_details = FALSE
  )
mod_miete_never

#ggdid(mod_miete_never)

tidy(mod_miete_never) %>%
  left_join(dates_pseudo_halbjahr %>% filter(date %% 100 %in% c(6, 12)),
            by = join_by(group == date_pseudo_halbjahr)) %>%
  mutate(is_treated = time >= group) %>%
  ggplot(aes(x = time, y = estimate, ymin = conf.low, ymax = conf.high, color = is_treated))+
  geom_linerange()+
  geom_point()+
  geom_hline(aes(yintercept = 0), linetype = "dashed")+
  facet_wrap(~date)+
  scale_x_continuous(breaks = 1:20)+
  theme_bw()+
  theme(legend.position = "none")

mod_miete_never_agg_dyn <- did::aggte(mod_miete_never, type = "dynamic")
ggdid(mod_miete_never_agg_dyn)+
  coord_cartesian(xlim = c(-6, 10))+
  scale_x_continuous(breaks = -6:10)+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr: Relativ zum ersten Treatment",
       y = "ATT: Miete (€/m²)",
       title = element_blank())
```

## Nur Großstädte

```{r}
mod_miete_3 <- data_miete_complete %>%
  filter(n_cell_date > 0) %>%
  #filter(n_cell > 10) %>%
  filter(!gemeindetyp_name %in% c("Großstadt")) %>%
  att_gt(
    data = .,
    yname = "mean_mietekalt_m2",
    tname = "date_pseudo_halbjahr",
    idname = "xy_mp",
    gname = "got_fiber_date_pseudo_halbjahr",
    xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + gemeindetyp_name + durchschnittsalter + anzahl_haushalte + einkommen + einkommen_delta,
    weightsname = "anzahl_haushalte",
    anticipation = 0,
    alp = 0.05,
    control_group = "notyettreated",
    est_method = "dr",
    base_period = "varying",
    clustervars = c("xy_mp", "plz"),
    biter = 1000,
    pl = TRUE,
    cores = 6,
    allow_unbalanced_panel = TRUE,
    print_details = FALSE
  )
mod_miete_3

mod_miete_3_agg_dyn <- did::aggte(mod_miete_3, type = "dynamic")

bind_rows(
  tidy(mod_miete_agg_dyn),
  tidy(mod_miete_3_agg_dyn),
  .id = "id"
) %>%
  select(id, event.time, estimate, conf.low, conf.high) %>%
  #filter(event.time == 2) %>%
  pivot_wider(names_from = id, values_from = c(conf.low, conf.high)) %>%
  mutate(is_treated = event.time >= 0) %>%
  ggplot(aes(x = event.time, color = is_treated))+
  geom_linerange(aes(ymin = conf.low_1, ymax = conf.high_1), alpha = .5)+
  geom_linerange(aes(ymin = conf.low_2, ymax = conf.high_2))+
  geom_point(aes(y = estimate))+
  theme_bw()

ggdid(mod_miete_agg_dyn)+
  coord_cartesian(ylim = c(-2.5, 2.5))
ggdid(mod_miete_3_agg_dyn)+
  coord_cartesian(ylim = c(-2.5, 2.5))
```

## Nur ländliche Gebiete

```{r}
mod_miete_4 <- data_miete_complete %>%
  filter(n_cell_date > 0) %>%
  #filter(n_cell > 10) %>%
  filter(!gemeindetyp_name %in% c("Großstadt")) %>%
  att_gt(
    data = .,
    yname = "mean_mietekalt_m2",
    tname = "date_pseudo_halbjahr",
    idname = "xy_mp",
    gname = "got_fiber_date_pseudo_halbjahr",
    xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + gemeindetyp_name + durchschnittsalter + anzahl_haushalte + einkommen + einkommen_delta,
    weightsname = "anzahl_haushalte",
    anticipation = 0,
    alp = 0.05,
    control_group = "notyettreated",
    est_method = "dr",
    base_period = "varying",
    clustervars = c("xy_mp", "plz"),
    biter = 1000,
    pl = TRUE,
    cores = 6,
    allow_unbalanced_panel = TRUE,
    print_details = FALSE
  )
mod_miete_4

mod_miete_4_agg_dyn <- did::aggte(mod_miete_4, type = "dynamic")

bind_rows(
  tidy(mod_miete_agg_dyn),
  tidy(mod_miete_4_agg_dyn),
  .id = "id"
) %>%
  select(id, event.time, estimate, conf.low, conf.high) %>%
  #filter(event.time == 2) %>%
  pivot_wider(names_from = id, values_from = c(conf.low, conf.high)) %>%
  mutate(is_treated = event.time >= 0) %>%
  ggplot(aes(x = event.time, color = is_treated))+
  geom_linerange(aes(ymin = conf.low_1, ymax = conf.high_1), alpha = .5)+
  geom_linerange(aes(ymin = conf.low_2, ymax = conf.high_2))+
  geom_point(aes(y = estimate))+
  theme_bw()

ggdid(mod_miete_agg_dyn)+
  coord_cartesian(ylim = c(-2.5, 2.5))
ggdid(mod_miete_4_agg_dyn)+
  coord_cartesian(ylim = c(-2.5, 2.5))
```

# Kauf

## Bevorzugte Spezifikation

```{r}
mod_kauf <- data_kauf_complete %>%
  filter(n_cell_date > 0) %>%
  #filter(n_cell > 10) %>%
  #filter(!gemeindetyp_name %in% c("Großstadt")) %>%
  att_gt(
    data = .,
    yname = "mean_kaufpreis",
    tname = "date_pseudo_halbjahr",
    idname = "xy_mp",
    gname = "got_fiber_date_pseudo_halbjahr",
    xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + gemeindetyp_name + durchschnittsalter + anzahl_haushalte + einkommen + einkommen_delta,
    weightsname = "anzahl_haushalte",
    anticipation = 0,
    alp = 0.05,
    control_group = "notyettreated",
    est_method = "dr",
    base_period = "varying",
    clustervars = c("xy_mp", "plz"),
    biter = 1000,
    pl = TRUE,
    cores = 6,
    allow_unbalanced_panel = TRUE,
    print_details = FALSE
  )
mod_kauf

#ggdid(mod_kauf)

tidy(mod_kauf) %>%
  left_join(dates_pseudo_halbjahr %>% filter(date %% 100 %in% c(6, 12)),
            by = join_by(group == date_pseudo_halbjahr)) %>%
  mutate(is_treated = time >= group) %>%
  ggplot(aes(x = time, y = estimate, ymin = conf.low, ymax = conf.high, color = is_treated))+
  geom_linerange()+
  geom_point()+
  geom_hline(aes(yintercept = 0), linetype = "dashed")+
  facet_wrap(~date, nrow = 2)+
  scale_y_continuous(labels = scales::label_number(scale = 1/1000))+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr",
       y = "ATT: Kaufpreis (1000€)",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_kauf.pdf", width = 5, height = 4, device = cairo_pdf)

mod_kauf_agg_dyn <- did::aggte(mod_kauf, type = "dynamic")
ggdid(mod_kauf_agg_dyn)+
  coord_cartesian(xlim = c(-6, 10))+
  scale_x_continuous(breaks = -6:10)+
  scale_y_continuous(labels = scales::label_number(scale = 1/1000))+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr: Relativ zum ersten Treatment",
       y = "ATT: Kaufpreis (1000€)",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_kauf_agg_dyn.pdf", width = 5, height = 4, device = cairo_pdf)
  
mod_kauf_agg_group <- did::aggte(mod_kauf, type = "group")
ggdid(mod_kauf_agg_group)+
  scale_x_continuous(labels = scales::label_number(scale = 1/1000))+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "ATT: Kaufpreis (1000€)",
       y = "Halbjahr: Erstes Treatments",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_kauf_agg_group.pdf", width = 5, height = 4, device = cairo_pdf)

mod_kauf_agg_calendar <- did::aggte(mod_kauf, type = "calendar")
ggdid(mod_kauf_agg_calendar)+
  scale_y_continuous(labels = scales::label_number(scale = 1/1000))+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr",
       y = "ATT: Kaufpreis (1000€)",
       title = element_blank())
ggsave("../Output/plots/did/plot_did_kauf_agg_calendar.pdf", width = 5, height = 4, device = cairo_pdf)
```

## Ohne PLZ Clustering

```{r}
mod_kauf_2 <- data_kauf_complete %>%
  filter(n_cell_date > 0) %>%
  #filter(n_cell > 10) %>%
  #filter(!gemeindetyp_name %in% c("Großstadt")) %>%
  att_gt(
    data = .,
    yname = "mean_kaufpreis",
    tname = "date_pseudo_halbjahr",
    idname = "xy_mp",
    gname = "got_fiber_date_pseudo_halbjahr",
    xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + gemeindetyp_name + durchschnittsalter + anzahl_haushalte + einkommen + einkommen_delta,
    weightsname = "anzahl_haushalte",
    anticipation = 0,
    alp = 0.05,
    control_group = "notyettreated",
    est_method = "dr",
    base_period = "varying",
    clustervars = c("xy_mp"),
    biter = 1000,
    pl = TRUE,
    cores = 6,
    allow_unbalanced_panel = TRUE,
    print_details = FALSE
  )
mod_kauf_2

mod_kauf_2_agg_dyn <- did::aggte(mod_kauf_2, type = "dynamic")
ggdid(mod_kauf_2_agg_dyn)
```

Vergleich

```{r}
bind_rows(
  tidy(mod_kauf_agg_dyn),
  tidy(mod_kauf_2_agg_dyn),
  .id = "id"
) %>%
  select(id, event.time, estimate, conf.low, conf.high) %>%
  #filter(event.time == 2) %>%
  pivot_wider(names_from = id, values_from = c(conf.low, conf.high)) %>%
  mutate(is_treated = event.time >= 0) %>%
  ggplot(aes(x = event.time, color = is_treated))+
  geom_linerange(aes(ymin = conf.low_1, ymax = conf.high_1), alpha = .5, linetype = "dashed")+
  geom_linerange(aes(ymin = conf.low_2, ymax = conf.high_2))+
  geom_point(aes(y = estimate))+
  theme_bw()+
  theme(legend.position = "none")+
  labs(x = "Halbjahr: Relativ zum ersten Treatment",
       y = "ATT: Kaufpreis (1000€)",
       title = element_blank())

ggsave("../Output/plots/did/plot_did_kauf_agg_dyn_cluster_comparison.pdf", width = 5, height = 4, device = cairo_pdf)

ggdid(mod_kauf_agg_dyn)+
  coord_cartesian(ylim = c(-3e5, 3e5))
ggdid(mod_kauf_2_agg_dyn)+
  coord_cartesian(ylim = c(-3e5, 3e5))
```

# Tabelle

## Miete

Tabelle mit Werten für 1 Jahr nach Treatment für die verschiedenen Modelle

```{r}
f_tidy_agg <- function(.x, type = "dynamic", event_time_filter = 2) {
  did::aggte(.x, type = type) %>%
    tidy(.x) %>% 
    select(event.time, estimate, conf.low, conf.high) %>%
    filter(event.time == event_time_filter)
}

bind_rows(
  f_tidy_agg(mod_miete_agg_dyn) %>% mutate(typ = "Bevorzugt"),
  f_tidy_agg(mod_miete_2_agg_dyn) %>% mutate(typ = "Nur Cell Cluster"),
  f_tidy_agg(mod_miete_never_agg_dyn) %>% mutate(typ = "Never Treated")
)
```

```{r}
# First, create a base parameter list with your default settings
base_params <- list(
  data = data_miete_complete,
  yname = "mean_mietekalt_m2",
  tname = "date_pseudo_halbjahr",
  idname = "xy_mp",
  gname = "got_fiber_date_pseudo_halbjahr",
  xformla = ~ median_baujahr + median_wohnflaeche + median_zimmeranzahl + 
            gemeindetyp_name + durchschnittsalter + anzahl_haushalte + 
            einkommen + einkommen_delta,
  weightsname = "anzahl_haushalte",
  anticipation = 0,
  alp = 0.05,
  est_method = "dr",
  base_period = "varying",
  biter = 1000,
  pl = TRUE,
  cores = 6,
  allow_unbalanced_panel = TRUE,
  print_details = FALSE
)

# Define your model variations
model_specs <- list(
  model1 = list(
    clustervars = c("xy_mp", "plz"),
    control_group = "notyettreated"
  ),
  model2 = list(
    clustervars = c("xy_mp"),  # different clustering
    control_group = "notyettreated"
  ),
  model3 = list(
    clustervars = c("xy_mp", "plz"),
    control_group = "nevertreated"  # different control group
  ),
  model4 = list(
    clustervars = c("xy_mp", "plz"),
    control_group = "notyettreated",
    xformla = NULL  # no covariates
  )
)

# Function to merge base parameters with model-specific parameters
run_model <- function(model_params) {
  final_params <- modifyList(base_params, model_params)
  do.call(att_gt, final_params)
}

# Run all models
models <- model_specs %>%
  purrr::map(run_model, .progress = TRUE)
```

```{r}
# First, let's extract the relevant statistics for each model
table_stats <- models %>%
  purrr::map_dfr(
    ~f_tidy_agg(.x, type = "dynamic", event_time_filter = 2),
    .id = "model",
    .progress = TRUE
  )

table_stats %>%
  mutate(params = model_specs)
```


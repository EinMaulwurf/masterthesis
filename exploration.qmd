---
title: "exploration"
format: html
---

# Setup

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(sf)
#library(sfheaders)
library(arrow)
library(duckdb)
library(leaflet)
library(modelsummary)
library(kableExtra)
```

Options for KableExtra (exporting Latex Tables)
```{r}
options(modelsummary_factory_latex = 'kableExtra')
options(modelsummary_format_numeric_latex = "plain")
options(modelsummary_factory_default = "latex")
#options("modelsummary_factory_default" = "latex")
```

Export all packages with citations
```{r}
repmis::LoadandCite(
  bibtex = TRUE,
  file = "r-references.bib"
)
```

# Loading Data

## Geodaten von Gisco

```{r}
deutschland <- giscoR::gisco_get_countries(epsg = "3035", country = "DE", resolution = "10")
bundesländer <- giscoR::gisco_get_nuts(epsg = "3035", country = "DE", nuts_level = 1, resolution = "10")

if(!"gemeinden.gpkg" %in% list.files("./Daten/Geodaten/")) {
  giscoR::gisco_get_communes(epsg = "3035", country = "DE") %>%
    select(-FID) %>%
    janitor::clean_names() %>%
    st_write("./Daten/Geodaten/gemeinden.gpkg")
}

gemeinden <- st_read("./Daten/Geodaten/gemeinden.gpkg", quiet = TRUE, as_tibble = TRUE)

# z.B. Hamburg hat zwei Exklaven die ich hier entferne
get_stadt <- function(stadt) {
  gemeinden %>% 
    filter(comm_name == stadt) %>%
    st_cast("POLYGON", warn = FALSE) %>%
    mutate(area = st_area(.)) %>%
    slice_max(area, n = 1) %>%
    st_cast("MULTIPOLYGON", warn = FALSE)
}

darmstadt <- get_stadt("Darmstadt")
berlin <- get_stadt("Berlin")
hamburg <- get_stadt("Hamburg")
```

## Breitbandatlas

```{r}
# Laden der Arrow Datensätze
breitband_100m_arrow <- open_dataset("./Daten/Breitbandatlas/Raster_100m/")
breitband_1km_arrow <- open_dataset("./Daten/Breitbandatlas/Raster_1km/")

# Funktion um automatisch Daten einer bestimmen Stadt zu laden
get_breitband_stadt <- function(stadt_name, size = "100m", variables = everything()) {
  stadt <- gemeinden %>% 
    filter(comm_name == stadt_name) %>%
    st_cast("POLYGON") %>%
    mutate(area = st_area(.)) %>%
    slice_max(area, n = 1) %>%
    st_cast("MULTIPOLYGON")
  
  if(size == "100m") {
    breitband_100m_arrow %>%
      select(date, x_mp, y_mp, {{variables}}) %>%
      filter(x_mp %>% between(st_bbox(stadt)["xmin"], st_bbox(stadt)["xmax"]),
             y_mp %>% between(st_bbox(stadt)["ymin"], st_bbox(stadt)["ymax"])) %>%
      collect()
  } else if(size == "1km") {
    breitband_1km_arrow %>%
      select(date, x_mp, y_mp, {{variables}}) %>%
      filter(x_mp %>% between(st_bbox(stadt)["xmin"], st_bbox(stadt)["xmax"]),
           y_mp %>% between(st_bbox(stadt)["ymin"], st_bbox(stadt)["ymax"])) %>%
      collect()
  }
}

# Beispielabfrage
breitband_glasfaser_berlin <- get_breitband_stadt("Berlin", size = "100m", variables = down_fn_hh_ftthb_1000)
```

```{r}
# Laden der Max-Speed Variablen
breitband_1km_max_speed <- read_parquet("./Daten/Breitbandatlas/Raster_1km_max_speed.parquet")

# Laden des fehlerhaften Koordinaten
breitband_1km_problems <- read_parquet("./Daten/Breitbandatlas/Raster_1km_problems.parquet")
```

## Zensusdaten

```{r}
zensus_arrow <- open_dataset("./Daten/Zensus/Gesamt/")
```

## LAEA Grid

```{r}

```

# Funktion um Grid zu erstellen

Erstelle Grid zu sf Objekt
```{r}
make_laea_grid <- function(obj, size = 100) {
  obj_bbox <- st_bbox(obj)
  obj_offset_x <- floor(obj_bbox["xmin"]/size)*size - (size/2)
  obj_offset_y <- floor(obj_bbox["ymin"]/size)*size - (size/2)
  
  st_make_grid(obj, cellsize = size, offset = c(obj_offset_x, obj_offset_y))
}

# Beispiel
darmstadt %>%
  make_laea_grid(size = 1000) %>%
  ggplot()+
  geom_sf()+
  geom_sf(data = darmstadt, fill = NA)
```

Füge Grid zu Daten hinzu
```{r}
add_laea_grid <- function(obj, size = 100, x_mp = "x_mp", y_mp = "y_mp") {
  obj %>%
    st_as_sf(coords = c(x_mp, y_mp), crs = 3035) %>%
    st_buffer(dist = size/2, endCapStyle = "SQUARE")
}

get_breitband_stadt("Darmstadt", size = "1km", variables = down_fn_hh_ftthb_1000) %>%
  filter(date == 202312) %>%
  add_laea_grid(size = 1000) %>%
  ggplot()+
  geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
  scale_fill_viridis_c()
```

# Plots

```{r}
get_breitband_stadt("Berlin", variables = down_fn_hh_ftthb_1000) %>%
  filter(date == 202312) %>%
  add_laea_grid() %>%
  ggplot()+
  geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
  scale_fill_viridis_c()+
  theme_void()

get_breitband_stadt("Berlin", variables = down_fn_hh_ftthb_1000) %>%
  filter(date %in% c(202312, 202206)) %>%
  arrange(x_mp, y_mp, date) %>%
  group_by(x_mp, y_mp) %>%
  mutate(delta = down_fn_hh_ftthb_1000 - lag(down_fn_hh_ftthb_1000, n = 1)) %>%
  ungroup() %>%
  filter(date == 202312) %>%
  add_laea_grid() %>%
  ggplot()+
  geom_sf(aes(fill = delta), color = NA)+
  scale_fill_viridis_c()+
  theme_void()
```

Ganz Deutschland mit 1km Quadraten
```{r}
p <- breitband_1km_arrow %>%
  filter(date == 202312) %>%
  select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
  collect() %>%
  add_laea_grid(size = 1000) %>%
  ggplot()+
  geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
  geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .5)+
  geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .2)+
  scale_fill_viridis_c()+
  theme_void()+
  theme(legend.position = "none")

ggsave("./Output/plot_de_glasfaser_202406_1km.pdf", plot = p, width = 5, height = 7)
```

Vergleich über Jahre. Hier habe ich festgestellt, dass bis einschließlich 07.2021 ein 250m Raster verwendet wird.
```{r}
stadt <- "Hamburg"

breitband_dates <- get_breitband_stadt(stadt, size = "100m", variables = down_fn_hh_ftthb_1000) %>%
  distinct(date) %>%
  arrange(date) %>%
  pull()

for(d in breitband_dates) {
  print(d)
  
  p <- get_breitband_stadt(stadt, size = "100m", variables = down_fn_hh_ftthb_1000) %>%
    filter(date == d) %>%
    add_laea_grid(size = 100) %>%
    ggplot()+
    geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
    geom_sf(data = get_stadt(stadt), fill = NA, color = "grey30", linewidth = .5)+
    # geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .8)+
    # geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .5)+
    scale_fill_viridis_c(option = "magma", limits = c(0, 100))+
    labs(title = ym(d))+
    theme_void()+
    theme(legend.position = "none",
          plot.title = element_text(hjust = 0.5, color = "grey90"),
          plot.title.position = "plot",
          plot.background = element_rect(fill = "grey10"))
  
  ggsave(str_glue("./Output/{str_to_lower(stadt)}_animation/{str_to_lower(stadt)}_glasfaser_100m_{d}.jpg"), plot = p, width = 5, height = 5, create.dir = TRUE)
}
```

Jeztzt ganz Deutschland über die Jahre
```{r}
breitband_dates <- breitband_1km_arrow %>%
  distinct(date) %>%
  arrange(date) %>%
  collect() %>%
  pull()

for(d in breitband_dates) {
  print(d)
  
  p <- breitband_1km_arrow %>%
    filter(date == d) %>%
    select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
    collect() %>%
    add_laea_grid(size = 1000) %>%
    ggplot()+
    geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
    geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .8)+
    geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .5)+
    scale_fill_viridis_c(option = "magma", limits = c(0, 100))+
    labs(title = ym(d))+
    theme_void()+
    theme(legend.position = "none",
          plot.title = element_text(hjust = 0.5, color = "grey90"),
          plot.title.position = "plot",
          plot.background = element_rect(fill = "grey10"))
  
  ggsave(str_glue("./Output/deutschland_animation/deutschland_glasfaser_1km_{d}.jpg"), 
         plot = p, width = 5, height = 7, create.dir = TRUE)
}
```

Jetzt Karte mit maximal verfügbarer Geschwindigkeit
```{r}
breitband_dates <- breitband_1km_arrow %>%
  distinct(date) %>%
  arrange(date) %>%
  collect() %>%
  pull()

for(d in breitband_dates) {
  print(d)
  
  p <- breitband_1km_max_speed %>%
    filter(date == d) %>%
    add_laea_grid(size = 1000) %>%
    ggplot()+
    geom_sf(aes(fill = max_speed_all), color = NA)+
    geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .8)+
    geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .5)+
    scale_fill_viridis_c(option = "magma", limits = c(16, 1000), trans = "log", breaks = c(16, 30, 50, 100, 200, 400, 1000))+
    labs(title = ym(d),
         fill = element_blank())+
    theme_void()+
    theme(legend.position = "top",
          legend.key.width = unit(1, "cm"),
          legend.text = element_text(color = "grey70"),
          plot.title = element_text(hjust = 0.5, color = "grey90"),
          plot.title.position = "plot",
          plot.background = element_rect(fill = "grey10"))
  
  ggsave(str_glue("./Output/deutschland_max_speed_animation/deutschland_max_speed_1km_{d}.jpg"), 
         plot = p, width = 5, height = 7, create.dir = TRUE)
}
```

Anteil Haushalte mit FTTBH Anschluss
```{r}
zensus_haushalte_1km <- zensus_arrow %>%
  filter(typ == "1km") %>%
  mutate(anzahl_haushalte = insgesamt_bevoelkerung / durchschn_hh_groesse) %>%
  select(x_mp, y_mp, anzahl_haushalte) %>%
  filter(!is.na(anzahl_haushalte)) %>%
  collect()

breitband_1km_haushalte_aggregiert <- breitband_1km_arrow %>%
  select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
  collect() %>%
  left_join(zensus_haushalte_1km, by = join_by(x_mp, y_mp)) %>%
  mutate(has_fiber = if_else(down_fn_hh_ftthb_1000 > 50, 1, 0)) %>%
  group_by(date) %>%
  summarise(haushalte_fiber = sum(has_fiber * anzahl_haushalte, na.rm = TRUE))

breitband_1km_haushalte_aggregiert %>%
  ggplot(aes(x = ym(date), y = haushalte_fiber))+
  geom_line()+
  geom_point()+
  scale_x_date()+
  scale_y_continuous(labels = scales::label_number())

# Nochmal mit 100m Raster
zensus_haushalte_100m <- zensus_arrow %>%
  filter(typ == "100m") %>%
  mutate(anzahl_haushalte = insgesamt_bevoelkerung / durchschn_hh_groesse) %>%
  select(x_mp, y_mp, anzahl_haushalte) %>%
  filter(!is.na(anzahl_haushalte)) %>%
  collect()

breitband_100m_haushalte_aggregiert <- breitband_100m_arrow %>%
  select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
  collect() %>%
  left_join(zensus_haushalte_100m, by = join_by(x_mp, y_mp)) %>%
  mutate(has_fiber = if_else(down_fn_hh_ftthb_1000 > 50, 1, 0)) %>%
  group_by(date) %>%
  summarise(haushalte_fiber = sum(has_fiber * anzahl_haushalte, na.rm = TRUE))

breitband_100m_haushalte_aggregiert %>%
  ggplot(aes(x = ym(date), y = haushalte_fiber))+
  geom_line()+
  geom_point()+
  scale_x_date()+
  scale_y_continuous(labels = scales::label_number())

# Gesamt
rbind(
  breitband_100m_haushalte_aggregiert %>% mutate(size = "100m"),
  breitband_1km_haushalte_aggregiert %>% mutate(size = "1km")
) %>%
  mutate(Stichtag = ceiling_date(ym(date), unit = "month") - days(1)) %>%
  ggplot(aes(x = Stichtag, y = haushalte_fiber, color = size))+
  geom_line()+
  geom_point()+
  scale_y_continuous(labels = scales::label_number(scale = 1/1e6))+
  scale_x_date(breaks = "1 year")
```

Zellen mit fehlendem Wert zu Anzahl Haushalte aus Zensus
```{r}
stadt_beispiel_1_bbox <- get_stadt("Runkel") %>% st_bbox()
stadt_beispiel_2_bbox <- get_stadt("Darmstadt") %>% st_bbox()

zensus_arrow %>%
  filter(typ == "100m") %>%
  filter(x_mp %>% between(stadt_beispiel_1_bbox["xmin"], stadt_beispiel_1_bbox["xmax"]),
         y_mp %>% between(stadt_beispiel_1_bbox["ymin"], stadt_beispiel_1_bbox["ymax"])) %>%
  select(x_mp, y_mp, insgesamt_bevoelkerung, durchschn_hh_groesse) %>%
  mutate(anzahl_haushalte = insgesamt_bevoelkerung / durchschn_hh_groesse) %>%
  collect() %>%
  mutate(zensus_na = is.na(durchschn_hh_groesse)) %>%
  add_laea_grid() %>%
  ggplot()+
  ggspatial::annotation_map_tile(zoomin = 0, type = "osm")+
  geom_sf(aes(fill = zensus_na, alpha = zensus_na), color = NA)+
  scale_fill_manual(values = c("FALSE" = "lightblue", "TRUE" = "purple"))+
  scale_alpha_manual(values = c(0.8, 1))+
  theme_void()+
  theme(legend.position = "none")

ggsave("./Output/plots/karten/plot_runkel_zensus_missing.pdf", width = 3, height = 3)

zensus_arrow %>%
  filter(typ == "100m") %>%
  filter(x_mp %>% between(stadt_beispiel_2_bbox["xmin"], stadt_beispiel_2_bbox["xmax"]),
         y_mp %>% between(stadt_beispiel_2_bbox["ymin"], stadt_beispiel_2_bbox["ymax"])) %>%
  select(x_mp, y_mp, insgesamt_bevoelkerung, durchschn_hh_groesse) %>%
  mutate(anzahl_haushalte = insgesamt_bevoelkerung / durchschn_hh_groesse) %>%
  collect() %>%
  mutate(zensus_na = is.na(durchschn_hh_groesse)) %>%
  add_laea_grid() %>%
  ggplot()+
  ggspatial::annotation_map_tile(zoomin = 0, type = "osm")+
  geom_sf(aes(fill = zensus_na, alpha = zensus_na), color = NA)+
  scale_fill_manual(values = c("FALSE" = "lightblue", "TRUE" = "purple"))+
  scale_alpha_manual(values = c(0.8, 1))+
  theme_void()+
  theme(legend.position = "none")

ggsave("./Output/plots/karten/plot_darmstadt_zensus_missing.pdf", width = 3, height = 3)
```

Zuwächse an FTTHB über die Zeit
```{r}
read_parquet("./Daten/Breitbandatlas/Raster_1km_got_fiber_date.parquet") %>%
  count(got_fiber_date) %>%
  mutate(got_fiber_date = ym(got_fiber_date)) %>%
  ggplot(aes(x = got_fiber_date, y = n))+
  geom_point()+
  geom_line(aes(y = cumsum(n)))+
  theme_bw()
```

Zellen mit vollständigem Panel bei den Kauf/Miet Daten
```{r}
stadt_beispiel_1_bbox <- get_stadt("Runkel") %>% st_bbox()
stadt_beispiel_2_bbox <- get_stadt("Darmstadt") %>% st_bbox()

read_parquet("./Daten/data_miete_complete.parquet") %>%
  group_by(x_mp, y_mp) %>%
  summarise(is_complete = sum(n_cell_date == 0) <= 0,
            .groups = "drop") %>%
  filter(x_mp %>% between(stadt_beispiel_1_bbox["xmin"], stadt_beispiel_1_bbox["xmax"]),
         y_mp %>% between(stadt_beispiel_1_bbox["ymin"], stadt_beispiel_1_bbox["ymax"])) %>%
  add_laea_grid(size = 1000) %>%
  ggplot()+
  ggspatial::annotation_map_tile(zoomin = 0, type = "osm", cachedir = "./.cache")+
  geom_sf(aes(fill = is_complete), color = NA, alpha = .5)+
  scale_fill_manual(values = c("FALSE" = "lightblue", "TRUE" = "purple"))+
  scale_alpha_manual(values = c(0.8, 1))+
  theme_void()+
  theme(legend.position = "right")

read_parquet("./Daten/data_miete_complete.parquet") %>%
  group_by(x_mp, y_mp) %>%
  summarise(is_complete = sum(n_cell_date == 0) <= 0,
            .groups = "drop") %>%
  filter(x_mp %>% between(stadt_beispiel_2_bbox["xmin"], stadt_beispiel_2_bbox["xmax"]),
         y_mp %>% between(stadt_beispiel_2_bbox["ymin"], stadt_beispiel_2_bbox["ymax"])) %>%
  add_laea_grid(size = 1000) %>%
  ggplot()+
  ggspatial::annotation_map_tile(zoomin = 0, type = "osm", cachedir = "./.cache")+
  geom_sf(aes(fill = is_complete), color = NA, alpha = .5)+
  scale_fill_manual(values = c("FALSE" = "lightblue", "TRUE" = "purple"))+
  scale_alpha_manual(values = c(0.8, 1))+
  theme_void()+
  theme(legend.position = "right")
```

# Karte mit Leaflet

```{r}
data_leaflet <- get_breitband_stadt("Darmstadt", variables = down_fn_hh_ftthb_1000) %>%
  filter(date == 202312) %>%
  add_laea_grid() %>%
  st_transform(4326)

# Create a continuous palette function
pal <- colorNumeric(
  palette = "viridis",
  domain = data_leaflet$down_fn_hh_ftthb_1000)

data_leaflet %>%
  leaflet() %>%
  addTiles() %>%
  addPolygons(stroke = FALSE, fillOpacity = .5, color = ~ pal(down_fn_hh_ftthb_1000))
```

# Summary Statistics

## Breitbanddaten
```{r}
# 100m
breitband_100m_arrow %>%
  select(date, down_fn_hh_ftthb_1000) %>%
  mutate(down_fn_hh_ftthb_1000 = round(down_fn_hh_ftthb_1000)) %>%
  collect() %>%
  group_by(Stichtag = ceiling_date(ym(date), unit = "month") - days(1)) %>%
  arrange(Stichtag) %>%
  summarise(n = n(),
            "Anteil 0" = mean(down_fn_hh_ftthb_1000 == 0, na.rm = TRUE)*100,
            "Anteil 100" = mean(down_fn_hh_ftthb_1000 == 100, na.rm = TRUE)*100,
            # share_0 = mean(down_fn_hh_ftthb_1000 <= 5, na.rm = TRUE),
            # share_100 = mean(down_fn_hh_ftthb_1000 >= 95, na.rm = TRUE),
            "Mittelwert" = mean(down_fn_hh_ftthb_1000, na.rm = TRUE),
            # pct_25 = quantile(down_fn_hh_ftthb_1000, 0.25, na.rm = TRUE),
            # pct_50 = quantile(down_fn_hh_ftthb_1000, 0.50, na.rm = TRUE),
            # pct_75 = quantile(down_fn_hh_ftthb_1000, 0.75, na.rm = TRUE)
            ) %>%
  kbl(format = "latex", 
      digits = 0, 
      booktabs = TRUE, 
      position = "h", 
      linesep = "", 
      format.args	= list(big.mark = " ")) %>% 
  cat()

# 1km
breitband_1km_arrow %>%
  select(date, down_fn_hh_ftthb_1000) %>%
  mutate(down_fn_hh_ftthb_1000 = round(down_fn_hh_ftthb_1000)) %>%
  collect() %>%
  group_by(Stichtag = ceiling_date(ym(date), unit = "month") - days(1)) %>%
  arrange(Stichtag) %>%
  summarise(n = n(),
            "Anteil 0" = mean(down_fn_hh_ftthb_1000 == 0, na.rm = TRUE)*100,
            "Anteil 100" = mean(down_fn_hh_ftthb_1000 == 100, na.rm = TRUE)*100,
            # share_0 = mean(down_fn_hh_ftthb_1000 <= 5, na.rm = TRUE),
            # share_100 = mean(down_fn_hh_ftthb_1000 >= 95, na.rm = TRUE),
            "Mittelwert" = mean(down_fn_hh_ftthb_1000, na.rm = TRUE),
            # pct_25 = quantile(down_fn_hh_ftthb_1000, 0.25, na.rm = TRUE),
            # pct_50 = quantile(down_fn_hh_ftthb_1000, 0.50, na.rm = TRUE),
            # pct_75 = quantile(down_fn_hh_ftthb_1000, 0.75, na.rm = TRUE)
            ) %>%
  kbl(format = "latex", 
      digits = 0, 
      booktabs = TRUE, 
      position = "h", 
      linesep = "", 
      format.args	= list(big.mark = " ")) %>% 
  cat()
```

Verteilung FTTHB 1km
```{r}
#| fig-width: 5
#| fig-height: 3

breitband_1km_arrow %>%
  select(date, down_fn_hh_ftthb_1000) %>%
  filter(date == 202406 | date == 201812) %>%
  filter(!is.na(down_fn_hh_ftthb_1000)) %>%
  collect() %>%
  mutate(Stichtag = ceiling_date(ym(date), unit = "month") - days(1)) %>%
  ggplot(aes(x = down_fn_hh_ftthb_1000))+
  geom_histogram(bins = 20)+
  facet_wrap(~Stichtag)+
  scale_y_continuous(labels = scales::label_number(scale = 1/1000))+
  theme_bw()+
  labs(x = "Anteil Glasfaseranschluss (1000 Mbit/s FTTHB) je Rasterzelle (%)",
       y = "Anzahl Rasterzellen (1000)")

ggsave("./Output/plots/plot_verteilung_glasfaser_2018_2024.pdf", width = 5, height = 3)
```

Summary Statistics für alle Variablen
```{r}
breitband_1km_arrow_summarised <- breitband_1km_arrow %>%
  group_by(date) %>%
  collect() %>%
  summarise(
    across(
      starts_with("down"),
      list(
        n = ~ sum(!is.na(.x)),
        anteil_0 = ~ mean(round(.x) == 0, na.rm = TRUE) * 100,
        anteil_100 = ~ mean(round(.x) == 100, na.rm = TRUE) * 100,
        mittelwert = ~ mean(.x, na.rm = TRUE)
      ),
      .names = "{.col}|{.fn}"
    )
  )

breitband_1km_arrow_summarised %>%
  pivot_longer(cols = -date) %>%
  mutate(value = replace_na(value, NA)) %>%
  separate_wider_delim(cols = name, delim = "|", names = c("variable", "statistik")) %>%
  pivot_wider(names_from = statistik, values_from = value) %>%
  mutate(Stichtag = ceiling_date(ym(date), unit = "month") - days(1)) %>%
  select(Stichtag, "Variable" = variable, n, "Anteil 0" = anteil_0, "Anteil 100" = anteil_100, "Mittelwert" = mittelwert) %>%
  kbl(format = "latex", 
      digits = 0, 
      booktabs = TRUE, 
      position = "h", 
      linesep = c("", "", "", "", "", "", "", " "), 
      format.args	= list(big.mark = " "),
      longtable = TRUE) %>% 
  cat()

options(knitr.kable.NA = '-')

breitband_1km_arrow_summarised %>%
  pivot_longer(cols = -date) %>%
  mutate(value = replace_na(value, NA)) %>%
  separate_wider_delim(cols = name, delim = "|", names = c("variable", "statistik")) %>%
  filter(statistik == "mittelwert") %>%
  mutate(value = if_else(statistik == "n", value/1000, value)) %>%
  mutate(variable = str_remove(variable, "down_fn_hh_")) %>%
  separate_wider_delim(cols = variable, delim = "_", names = c("variable", "geschwindigkeit")) %>%
  pivot_wider(names_from = c(geschwindigkeit, statistik), values_from = value) %>%
  # mutate(Stichtag = date %>% as.character(),
  #        Stichtag = paste0(str_sub(Stichtag, 1, 4), "-", str_sub(Stichtag, 5, 6)),
  #        .before = 1, .keep = "unused") %>%
  mutate(variable = str_to_upper(variable)) %>%
  mutate(Stichtag = ceiling_date(ym(date), unit = "month") - days(1),
         .before = 1, .keep = "unused") %>%
  kbl(format = "latex", 
      digits = 0, 
      booktabs = TRUE, 
      position = "h", 
      linesep = c("", "", "", "", "", "", "\\addlinespace"), 
      format.args	= list(big.mark = " "),
      longtable = TRUE,
      na = '-') %>% 
  cat()
```

```{r}
breitband_1km_arrow %>%
  distinct(x_mp, y_mp, date) %>%
  count(date) %>%
  collect()
```


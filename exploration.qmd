---
title: "exploration"
format: html
---

# Setup

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(sf)
#library(sfheaders)
library(arrow)
library(duckdb)
library(leaflet)
```

# Loading Data

## Geodaten von Gisco

```{r}
deutschland <- giscoR::gisco_get_countries(epsg = "3035", country = "DE", resolution = "10")
bundesländer <- giscoR::gisco_get_nuts(epsg = "3035", country = "DE", nuts_level = 1, resolution = "10")

if(!"gemeinden.gpkg" %in% list.files("./Daten/Geodaten/")) {
  giscoR::gisco_get_communes(epsg = "3035", country = "DE") %>%
    select(-FID) %>%
    st_write("./Daten/Geodaten/gemeinden.gpkg")
}

gemeinden <- st_read("./Daten/Geodaten/gemeinden.gpkg", quiet = TRUE)

# z.B. Hamburg hat zwei Exklaven die ich hier entferne
get_stadt <- function(stadt) {
  gemeinden %>% 
    filter(COMM_NAME == stadt) %>%
    st_cast("POLYGON", warn = FALSE) %>%
    mutate(area = st_area(.)) %>%
    slice_max(area, n = 1) %>%
    st_cast("MULTIPOLYGON", warn = FALSE)
}

darmstadt <- get_stadt("Darmstadt")
berlin <- get_stadt("Berlin")
hamburg <- get_stadt("Hamburg")
```

## Breitbandatlas

```{r}
# Laden der Arrow Datensätze
breitband_100m_arrow <- open_dataset("./Daten/Breitbandatlas/Raster_100m/")
breitband_1km_arrow <- open_dataset("./Daten/Breitbandatlas/Raster_1km/")

# Funktion um automatisch Daten einer bestimmen Stadt zu laden
get_breitband_stadt <- function(stadt_name, size = "100m", variables = everything()) {
  stadt <- gemeinden %>% 
    filter(COMM_NAME == stadt_name) %>%
    st_cast("POLYGON") %>%
    mutate(area = st_area(.)) %>%
    slice_max(area, n = 1) %>%
    st_cast("MULTIPOLYGON")
  
  if(size == "100m") {
    breitband_100m_arrow %>%
      select(date, x_mp, y_mp, {{variables}}) %>%
      filter(x_mp %>% between(st_bbox(stadt)["xmin"], st_bbox(stadt)["xmax"]),
             y_mp %>% between(st_bbox(stadt)["ymin"], st_bbox(stadt)["ymax"])) %>%
      collect()
  } else if(size == "1km") {
    breitband_1km_arrow %>%
      select(date, x_mp, y_mp, {{variables}}) %>%
      filter(x_mp %>% between(st_bbox(stadt)["xmin"], st_bbox(stadt)["xmax"]),
           y_mp %>% between(st_bbox(stadt)["ymin"], st_bbox(stadt)["ymax"])) %>%
      collect()
  }
}

# Beispielabfrage
breitband_glasfaser_berlin <- get_breitband_stadt("Berlin", size = "100m", variables = down_fn_hh_ftthb_1000)
```

```{r}
# Laden der Max-Speed Variablen
breitband_1km_max_speed <- read_parquet("./Daten/Breitbandatlas/Raster_1km_max_speed.parquet")
```

## Zensusdaten

```{r}
zensus_arrow <- open_dataset("./Daten/Zensus/Gesamt/")
```

## LAEA Grid

```{r}

```

# Funktion um Grid zu erstellen

Erstelle Grid zu sf Objekt
```{r}
make_laea_grid <- function(obj, size = 100) {
  obj_bbox <- st_bbox(obj)
  obj_offset_x <- floor(obj_bbox["xmin"]/size)*size - (size/2)
  obj_offset_y <- floor(obj_bbox["ymin"]/size)*size - (size/2)
  
  st_make_grid(obj, cellsize = size, offset = c(obj_offset_x, obj_offset_y))
}

# Beispiel
darmstadt %>%
  make_laea_grid(size = 1000) %>%
  ggplot()+
  geom_sf()+
  geom_sf(data = darmstadt, fill = NA)
```

Füge Grid zu Daten hinzu
```{r}
add_laea_grid <- function(obj, size = 100, x_mp = "x_mp", y_mp = "y_mp") {
  obj %>%
    st_as_sf(coords = c(x_mp, y_mp), crs = 3035) %>%
    st_buffer(dist = size/2, endCapStyle = "SQUARE")
}

get_breitband_stadt("Darmstadt", size = "1km", variables = down_fn_hh_ftthb_1000) %>%
  filter(date == 202312) %>%
  add_laea_grid(size = 1000) %>%
  ggplot()+
  geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
  scale_fill_viridis_c()
```

# Plots

```{r}
get_breitband_stadt("Berlin", variables = down_fn_hh_ftthb_1000) %>%
  filter(date == 202312) %>%
  add_laea_grid() %>%
  ggplot()+
  geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
  scale_fill_viridis_c()+
  theme_void()

get_breitband_stadt("Berlin", variables = down_fn_hh_ftthb_1000) %>%
  filter(date %in% c(202312, 202206)) %>%
  arrange(x_mp, y_mp, date) %>%
  group_by(x_mp, y_mp) %>%
  mutate(delta = down_fn_hh_ftthb_1000 - lag(down_fn_hh_ftthb_1000, n = 1)) %>%
  ungroup() %>%
  filter(date == 202312) %>%
  add_laea_grid() %>%
  ggplot()+
  geom_sf(aes(fill = delta), color = NA)+
  scale_fill_viridis_c()+
  theme_void()
```

Ganz Deutschland mit 1km Quadraten
```{r}
p <- breitband_1km_arrow %>%
  filter(date == 202312) %>%
  select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
  collect() %>%
  add_laea_grid(size = 1000) %>%
  ggplot()+
  geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
  geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .5)+
  geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .2)+
  scale_fill_viridis_c()+
  theme_void()+
  theme(legend.position = "none")

ggsave("./Output/plot_de_glasfaser_1km.pdf", plot = p, width = 10, height = 20)
```

Vergleich über Jahre. Hier habe ich festgestellt, dass bis einschließlich 07.2021 ein 250m Raster verwendet wird.
```{r}
stadt <- "Hamburg"

breitband_dates <- get_breitband_stadt(stadt, size = "100m", variables = down_fn_hh_ftthb_1000) %>%
  distinct(date) %>%
  arrange(date) %>%
  pull()

for(d in breitband_dates) {
  print(d)
  
  p <- get_breitband_stadt(stadt, size = "100m", variables = down_fn_hh_ftthb_1000) %>%
    filter(date == d) %>%
    add_laea_grid(size = 100) %>%
    ggplot()+
    geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
    geom_sf(data = get_stadt(stadt), fill = NA, color = "grey30", linewidth = .5)+
    # geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .8)+
    # geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .5)+
    scale_fill_viridis_c(option = "magma", limits = c(0, 100))+
    labs(title = ym(d))+
    theme_void()+
    theme(legend.position = "none",
          plot.title = element_text(hjust = 0.5, color = "grey90"),
          plot.title.position = "plot",
          plot.background = element_rect(fill = "grey10"))
  
  ggsave(str_glue("./Output/{str_to_lower(stadt)}_animation/{str_to_lower(stadt)}_glasfaser_100m_{d}.jpg"), plot = p, width = 5, height = 5, create.dir = TRUE)
}
```

Jeztzt ganz Deutschland über die Jahre
```{r}
breitband_dates <- breitband_1km_arrow %>%
  distinct(date) %>%
  arrange(date) %>%
  collect() %>%
  pull()

for(d in breitband_dates) {
  print(d)
  
  p <- breitband_1km_arrow %>%
    filter(date == d) %>%
    select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
    collect() %>%
    add_laea_grid(size = 1000) %>%
    ggplot()+
    geom_sf(aes(fill = down_fn_hh_ftthb_1000), color = NA)+
    geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .8)+
    geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .5)+
    scale_fill_viridis_c(option = "magma", limits = c(0, 100))+
    labs(title = ym(d))+
    theme_void()+
    theme(legend.position = "none",
          plot.title = element_text(hjust = 0.5, color = "grey90"),
          plot.title.position = "plot",
          plot.background = element_rect(fill = "grey10"))
  
  ggsave(str_glue("./Output/deutschland_animation/deutschland_glasfaser_1km_{d}.jpg"), 
         plot = p, width = 5, height = 7, create.dir = TRUE)
}
```

Jetzt Karte mit maximal verfügbarer Geschwindigkeit
```{r}
breitband_dates <- breitband_1km_arrow %>%
  distinct(date) %>%
  arrange(date) %>%
  collect() %>%
  pull()

for(d in breitband_dates) {
  print(d)
  
  p <- breitband_1km_max_speed %>%
    filter(date == d) %>%
    add_laea_grid(size = 1000) %>%
    ggplot()+
    geom_sf(aes(fill = max_speed_all), color = NA)+
    geom_sf(data = deutschland, fill = NA, color = "black", linewidth = .8)+
    geom_sf(data = bundesländer, fill = NA, color = "grey30", linewidth = .5)+
    scale_fill_viridis_c(option = "magma", limits = c(16, 1000), trans = "log", breaks = c(16, 30, 50, 100, 200, 400, 1000))+
    labs(title = ym(d),
         fill = element_blank())+
    theme_void()+
    theme(legend.position = "top",
          legend.key.width = unit(1, "cm"),
          legend.text = element_text(color = "grey70"),
          plot.title = element_text(hjust = 0.5, color = "grey90"),
          plot.title.position = "plot",
          plot.background = element_rect(fill = "grey10"))
  
  ggsave(str_glue("./Output/deutschland_max_speed_animation/deutschland_max_speed_1km_{d}.jpg"), 
         plot = p, width = 5, height = 7, create.dir = TRUE)
}
```

# Karte mit Leaflet

```{r}
data_leaflet <- get_breitband_stadt("Darmstadt", variables = down_fn_hh_ftthb_1000) %>%
  filter(date == 202312) %>%
  add_laea_grid() %>%
  st_transform(4326)

# Create a continuous palette function
pal <- colorNumeric(
  palette = "viridis",
  domain = data_leaflet$down_fn_hh_ftthb_1000)

data_leaflet %>%
  leaflet() %>%
  addTiles() %>%
  addPolygons(stroke = FALSE, fillOpacity = .5, color = ~ pal(down_fn_hh_ftthb_1000))
```


# Summary Statistics

Breitbanddaten
```{r}
breitband_1km_arrow %>%
  select(date, down_fn_hh_ftthb_1000) %>%
  collect() %>%
  #mutate(down_fn_hh_ftthb_1000 = round(down_fn_hh_ftthb_1000, 2)) %>%
  group_by(date) %>%
  summarise(n = n(),
            share_0 = mean(down_fn_hh_ftthb_1000 == 0),
            share_100 = mean(down_fn_hh_ftthb_1000 == 100),
            mean = mean(down_fn_hh_ftthb_1000),
            pct_25 = quantile(down_fn_hh_ftthb_1000, 0.25),
            pct_50 = quantile(down_fn_hh_ftthb_1000, 0.50),
            pct_75 = quantile(down_fn_hh_ftthb_1000, 0.75))
```

```{r}
breitband_1km_arrow %>%
  select(date, down_fn_hh_ftthb_1000) %>%
  collect() %>%
  ggplot(aes(x = as.factor(date), y = down_fn_hh_ftthb_1000, group = as.factor(date)))+
  geom_violin()

breitband_1km_arrow %>%
  select(date, down_fn_hh_ftthb_1000) %>%
  collect() %>%
  ggplot(aes(x = down_fn_hh_ftthb_1000))+
  geom_histogram(bins = 50)
```

# Regression

Regression um Anteil Glasfaser durch die Zensus Daten zu erklären. Problem: Die Residuen sind nicht annähernd normalverteilt. Eventuell sollte ich die Daten also als 0/1 modellieren und mit Logistischen Regressionen versuchen.

```{r}
zensus_100m_regression <- zensus_arrow %>%
  filter(typ == "100m") %>%
  select(x_mp, y_mp, insgesamt_bevoelkerung, durchschnittsalter, eigentuemerquote, durchschn_miete_qm) %>%
  collect()

# Bestimmte Stadt
get_breitband_stadt("Berlin", variables = down_fn_hh_ftthb_1000) %>%
  filter(date %in% c(202312, 202206)) %>%
  arrange(x_mp, y_mp, date) %>%
  group_by(x_mp, y_mp) %>%
  mutate(delta = down_fn_hh_ftthb_1000 - lag(down_fn_hh_ftthb_1000, n = 1)) %>%
  ungroup() %>%
  filter(date == 202312) %>%
  left_join(zensus_100m_regression, by = join_by(x_mp, y_mp)) %>%
  lm(delta ~ insgesamt_bevoelkerung + durchschnittsalter + eigentuemerquote + durchschn_miete_qm, data = .) %>%
  summary()

# Ganz Deutschland
mod1 <- breitband_100m_arrow %>%
  select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
  filter(date %in% c(202312, 202206)) %>%
  arrange(x_mp, y_mp, date) %>%
  to_duckdb() %>%
  group_by(x_mp, y_mp) %>%
  mutate(delta = down_fn_hh_ftthb_1000 - lag(down_fn_hh_ftthb_1000, n = 1)) %>%
  ungroup() %>%
  filter(date == 202312) %>%
  collect() %>%
  left_join(zensus_100m_regression, by = join_by(x_mp, y_mp)) %>%
  lm(delta ~ insgesamt_bevoelkerung + durchschnittsalter + eigentuemerquote + durchschn_miete_qm, data = .)

summary(mod1)
mod1$residuals %>% density() %>% plot()
```

```{r}
test <- breitband_100m_arrow %>%
  select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
  filter(date %in% c(202312, 202206)) %>%
  mutate(has_fiber = case_when(down_fn_hh_ftthb_1000 < 5 ~ FALSE,
                               down_fn_hh_ftthb_1000 > 95 ~ TRUE,
                               TRUE ~ NA)) %>%
  filter(!is.na(has_fiber)) %>%
  collect()

test %>%
  arrange(x_mp, y_mp, date) %>%
  group_by(x_mp, y_mp) %>%
  #mutate(got_fiber = has_fiber - lag(has_fiber))
  mutate(got_fiber = if_else(has_fiber - lag(has_fiber) == 1, TRUE, FALSE))
```

```{r}
test_got_fiber <- breitband_100m_arrow %>%
  select(date, x_mp, y_mp, down_fn_hh_ftthb_1000) %>%
  filter(date %in% c(202312, 202206)) %>%
  to_duckdb() %>%
  mutate(has_fiber = case_when(down_fn_hh_ftthb_1000 < 5 ~ 0,
                               down_fn_hh_ftthb_1000 > 95 ~ 1,
                               TRUE ~ NA)) %>%
  filter(!is.na(has_fiber)) %>%
  arrange(x_mp, y_mp, date) %>%
  group_by(x_mp, y_mp) %>%
  mutate(got_fiber = has_fiber - lag(has_fiber)) %>%
  #mutate(got_fiber = if_else(got_fiber == 1, TRUE, FALSE)) %>%
  #mutate(got_fiber = if_else(has_fiber - lag(has_fiber) == 1, TRUE, FALSE)) %>%
  ungroup() %>%
  filter(date == 202312) %>%
  filter(!is.na(got_fiber)) %>%
  collect()

mod2 <- test_got_fiber %>%
  mutate(got_fiber = if_else(got_fiber == 1, TRUE, FALSE),
         has_fiber = if_else(has_fiber == 1, TRUE, FALSE)) %>%
  left_join(zensus_100m_regression, by = join_by(x_mp, y_mp)) %>%
  glm(got_fiber ~ insgesamt_bevoelkerung + durchschnittsalter + eigentuemerquote + durchschn_miete_qm, data = .,
      family = binomial())
  
summary(mod2)
mod2$residuals %>% density() %>% plot()

test_got_fiber %>%
  left_join(zensus_100m_regression, by = join_by(x_mp, y_mp)) %>%
  slice_sample(n = 10000) %>%
  ggplot(aes(x = durchschn_miete_qm, y = has_fiber))+
  geom_point(size = 1, alpha = .01)+
  scale_x_log10()
```

## DiD

```{r}
data_rent <- read_csv("./Daten/data_rent.csv")

data_rent_summarized <- data_rent %>%
  group_by(r1_id, jahr) %>%
  summarise(mietekalt = mean(mietekalt),
            mietekalt_m2 = mean(mietekalt_m2),
            .groups = "drop") %>%
  mutate(x_mp = as.numeric(str_sub(r1_id, 1, 4))*1000 + 500,
         y_mp = as.numeric(str_sub(r1_id, 6, 9))*1000 + 500,
         .before = 1)

data_rent_summarized
get_breitband_stadt("Berlin", size = "1km", variables = down_fn_hh_ftthb_1000) %>%
  filter(date %% 100 == 12) %>%
  mutate(jahr = floor(date/100)) %>%
  left_join(data_rent_summarized, by = join_by(x_mp, y_mp, jahr)) %>%
  drop_na() %>%
  mutate(has_fiber = if_else(down_fn_hh_ftthb_1000 > 50, TRUE, FALSE)) %>%
  select(jahr, r1_id, has_fiber, mietekalt) %>%
  arrange(r1_id, jahr) %>%
  group_by(r1_id) %>%
  mutate(got_fiber = if_else(has_fiber - lag(has_fiber) == 1, TRUE, FALSE))
```

